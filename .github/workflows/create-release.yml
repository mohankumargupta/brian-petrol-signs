name: Create Release
on: 
  workflow_dispatch:
    inputs:
      releasename:
        description: Release Version
        required: true
jobs:    
  compile-pico-code:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Create directory for build output artifacts
        run: "mkdir -p ~/pico"   
      - name: List pico source files
        run: |
          ls ${{ github.workspace }}/code/pico/demo-multipanel
      - name: Compile Pico Sketch
        uses: arduino/compile-sketches@v1.0.0
        with:
          fqbn: arduino:mbed_rp2040:pico
          sketch-paths: |
            - ${{ github.workspace }}/code/pico/demo-multipanel
          cli-compile-flags: |
            - --build-path
            - /home/runner/pico
          verbose: true
      - name: List files in pico source directory
        run: "ls  ${{ github.workspace }}/code/pico/demo-multipanel"
      - name: list file listing in pico directory
        run: "ls -R ~/pico"
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.16.x'
      - name: Use cmake
        run: cmake --version
      - name: Install elf2uf2
        run: "git clone https://github.com/raspberrypi/pico-sdk $HOME/pico-sdk; cd $HOME/pico-sdk/tools/elf2uf2; mkdir build; cd build; cmake ..;make; ./elf2uf2 -v ~/pico/demo-multipanel.ino.elf ~/pico/pico.uf2 "
      - name: list file listing in Release directory
        run: "ls -R ~/pico"

  compile-d1mini-code:
    runs-on: ubuntu-latest
    needs: compile-pico-code
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Create directory for build output artifacts
        run: "mkdir -p ~/d1mini"           
      - name: List Contents
        run: "ls ${{ github.workspace }}/code/d1mini"        
      - name: Compile D1 mini sketch
        uses: arduino/compile-sketches@v1.0.0
        with:
          fqbn: esp8266:esp8266:d1_mini
          sketch-paths: |
            - ${{ github.workspace }}/code/d1mini
          cli-compile-flags: |
            - --build-path
            - /home/runner/d1mini            
          platforms: |
            - name: esp8266:esp8266
              source-url: https://arduino.esp8266.com/stable/package_esp8266com_index.json
          libraries: |
            - name: ESP AsyncTCP
              source-url: https://github.com/me-no-dev/ESPAsyncTCP/archive/refs/heads/master.zip
            - name: ESP Async WebServer
              source-url: https://github.com/me-no-dev/ESPAsyncWebServer/archive/refs/heads/master.zip
            - name: ArduinoJson
              source-url: https://github.com/bblanchon/ArduinoJson/archive/refs/heads/6.x.zip
          verbose: true
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'          
      - name: Install esptool
        run: "python -m pip install esptool"
      - name: List files in d1mini source directory
        run: "ls  ${{ github.workspace }}/code/d1mini"    
      - name: list file listing in Release directory
        run: "ls -R ~/d1mini"
        
      


      
